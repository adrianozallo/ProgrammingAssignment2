demo()
help.start()
quit
q()
x <- c(0.18,-1.54,0.42,0.95)
w <- 2,1,3,1
w <- c(2,1,3,1)
y <- sum(w*x)
y
xy
wx
w*x
y <- sum(w*x)/4
y
x
w
y <- sum(w*x)/sum(w)
y
2477.572*3/1000+146
2477.572*3/1000
4400/14
4400/44
ln(5/2)
log(5/2)
log(10)
log(2.77)
log(3/2)+log(4/3)+log(5/4)
log(5/2)
100*2477.572*log(5/2)
250(1/3+0.25+1/5)
250*(1/3+0.25+1/5)
100*2477.52*(1/3+0.25+1/5)
1.6*1000/16
35.31*4
0.124*24*219/1.39
29.125*15
20*29.125*15
20*29.125*15 -20*8.314*15
20.79-8.314
8.314*1280
8.314*1280*2
install.packages("swirl")
library("swirl")
swirl()
plot(child ~ parent,galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(clild ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3,col='red')
summary(regrline)
bye
bye()
data(mtcars)
names(mtcars)
?mtcars
---
pairs(mtcars, panel = panel.smooth, main = "mtcars data", col = 3
)
?mtcars
summary(lm(mpg ~ . , data = mtcars))$coefficients
summary(lm(mpg ~ . , data = mtcars))
mtcars
summary(lm(mpg ~ factor(am)+ wt +factor(cyl) , data = mtcars))
---
)
* The t-test for $H_0: \beta_{Agri} = 0$ versus $H_a: \beta_{Agri} \neq 0$ is  significant.
summary(lm(mpg ~ factor(am)+ wt + factor(cyl)+factor(vs)+factor(gear) , data = mtcars))
## T test analysis
summary(lm(mpg ~ factor(am)+ wt + factor(cyl)+factor(vs)+factor(gear) , data = mtcars))
t.test(mpg ~ am, data=mtcars)
summary(lm(mpg ~ factor(am)+ wt + factor(cyl)+factor(vs)+factor(gear) , data = mtcars))
t.test(mpg ~ am ,data = mtcars)
t.test(mpg ~ am, data=mtcars)
t.test(mpg ~ factor(am), data=mtcars)
## `Project goal description`
library(datasets); data(mtcars); require(stats); require(graphics);
t.test(mpg ~ factor(am), data=mtcars)
### T test analysis
x <- cbind (mtcars*factor(am))
x <- cbind (mtcars$factor(am))
## Variables correlation
x <- cbind (mtcars$factor(am[0]),mtcars$factor(am[1]))
x <- cbind (mtcars$am[0],mtcars$am[1])
x
cor(x)
cor(mpg.auto,mpg.manual)
?cor
cor(x)
x[2]
x[1] = mtcars[L,]$mpg
L = mtcars$am == 0
x[1] = mtcars[L,]$mpg
x1 = mtcars[L,]$mpg
x1
x2 = mtcars[!L,]$mpg
x2
?cbind
plot(x1,x2)
library(MASS)
data(mtcars)
names=c("Manual","Automatic"))
boxplot(mpg~am,data=mtcars,main="Averages",varwidth=TRUE, col=c(2,3), names=c("Manual","Automatic"))
plot(mtcars$am)
plot(mtcars$mpg,mtcars$am)
plot(mtcars$am,mtcars$mpg)
```{r, echo = FALSE,fig.height=5,fig.width=10}
```{r, fig.height=6,fig.width=7}
boxplot(mpg~am,data=mtcars,main="Averages",col=c(2,3), names=c("Automatic","Manual"))
```{r fig.height=6,fig.width=7}
lm(mpg ~ factor(am):wt +factor(am:qsec,data =mtcars))
data(mtcars)
lm(mpg ~ factor(am):wt +factor(am:qsec,data =mtcars))
lm(mpg ~ factor(am):wt +factor(am):qsec,data =mtcars))
lm(mpg ~ factor(am:wt) +factor(am:qsec),data =mtcars))
lm(mpg ~ factor(am)+wt +factor(am)+qsec),data =mtcars))
lm(mpg ~ factor(am)+wt +factor(am)+qsec,data =mtcars))
lm(mpg ~ factor(am)+wt+qsec,data =mtcars))
lm(mpg ~ factor(am)+wt+qsec,data =mtcars)
lm(mpg ~ factor(am):wt +factor(am:qsec,data =mtcars))
lm(mpg ~ factor(am) .,data=mtcars)
lm(mpg ~ factor(am)*.,data=mtcars)
lm(mpg ~ .,data=mtcars)
summary(lm(mpg ~ .,data=mtcars))
?lm
ummary(lm(mpg ~ factor(am)*.,data=mtcars))
summary(lm(mpg ~ factor(am)*.,data=mtcars))
summary(lm(mpg ~ factor(am)*.,data=mtcars)) # ummary of all variables regression
fit.min <- lm(mpg ~ 1, data=mtcars)  # minimum possible regression model
reduced.model <- step(fit.min, direction="forward",
scope=(~ factor(am):(wt + qsec + carb)))
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"              , destfile="./data/ravensData.rda",method="curl"
download.file("https://dl.dropboxusercontent.com/u/7710864/data/ravensData.rda"              , destfile="./data/ravensData.rda",method="curl")
library(kernlib)
data(spam)
str(spam[,1:5])
import library(kernlib)
?import
library(kernlib)
import(kernlib)
install kernlib
install(kernlib)
install.packages("kernlib")
library(kernlib)
source('~/.active-rstudio-document')
```{r}
library(kernlab)
library(kernlab)
install.package("kernlab")
?install
num_vect <- c(0.5,55,-10.6)
tf <- num_vect < 1
tf
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
| (3 > 5) & (4 == 4)
(3 > 5) & (4 == 4)
(TRUE == TRUE) | (TRUE == FALSE)
((111 >= 111) | !(TRUE)) & ((4+1) == 5)
my_char <- c("My", "name","is")
myname <-paste(my_char, collapse = " ")
myname
c(my_char,"Adriano")
myname <-c(my_char,"Adriano")
my_name
myname
paste(myname, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world", collapse = " ")
paste(c("X","Y","Z"),sep ="")
paste("X","Y","Z",sep ="")
paste(1:3, c("X","Y","Z"),sep ="")
paste(LETTERS, 1:4, sep = "-")
(TRUE == TRUE) | (TRUE == FALSE)
